// Generated by dts-bundle-generator v9.5.1

export interface DateTimeBuiltinFormat {
	__momentBuiltinFormatBrand: any;
}
export type DateTimeInput = Date | string | number | Array<string | number> | DateTime | null;
export type FormatInput = string | DateTimeBuiltinFormat | undefined;
export type DurationUnit = "year" | "years" | "y" | "month" | "months" | "M" | "week" | "weeks" | "isoWeek" | "w" | "day" | "days" | "d" | "hour" | "hours" | "h" | "minute" | "minutes" | "m" | "second" | "seconds" | "s" | "millisecond" | "milliseconds" | "ms" | "quarter" | "quarters" | "Q";
export interface DateTime extends Object {
	add: (amount?: DateTimeInput, unit?: DurationUnit) => DateTime;
	set: (unit: DurationUnit | "date", amount: DateTimeInput) => void;
	diff: (amount: DateTimeInput, unit?: DurationUnit, truncate?: boolean) => number;
	endOf: (unitOfTime: DurationUnit) => DateTime;
	format: (formatInput?: FormatInput) => string;
	fromNow: (withoutSuffix?: boolean) => string;
	from: (formaInput: DateTimeInput) => string;
	isSame: (input?: DateTimeInput, granularity?: DurationUnit) => boolean;
	isBefore: (input?: DateTimeInput) => boolean;
	isValid: () => boolean;
	local: () => DateTime;
	locale: (locale: string) => DateTime;
	startOf: (unitOfTime: DurationUnit) => DateTime;
	subtract: (amount?: DateTimeInput, unit?: DurationUnit) => DateTime;
	toDate: () => Date;
	toISOString: (keepOffset?: boolean) => string;
	isoWeekday: (day?: number | string) => number | string;
	valueOf: () => number;
	unix: () => number;
	utc: () => DateTime;
	utcOffset: () => number;
	hour?: () => number;
	minute?: () => number;
}
export interface RawTimeRange {
	from: DateTime | string;
	to: DateTime | string;
}
export interface TimeRange {
	from: DateTime;
	to: DateTime;
	raw: RawTimeRange;
}
export interface OverviewExtensionProps {
	serviceName: string;
	namespace?: string;
	initialTimeRange: TimeRange;
	onTimeRangeChange?: (timeRange: TimeRange) => void;
}
